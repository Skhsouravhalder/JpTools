<script>
    document.getElementById('authorship-form').addEventListener('submit', async function(event) {
        event.preventDefault();
        const pageTitle = document.getElementById('page-title').value;

        try {
            const apiUrl = `https://justapedia.org/api.php?action=query&prop=revisions&titles=${encodeURIComponent(pageTitle)}&rvprop=ids|timestamp|user|size&rvlimit=max&format=json&origin=*`;
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.statusText}`);
            }
            const data = await response.json();
            if (data.error) {
                throw new Error(data.error.info);
            }
            const pageId = Object.keys(data.query.pages)[0];
            if (pageId === '-1') {
                throw new Error('Page not found');
            }
            const page = data.query.pages[pageId];
            const revisions = page.revisions;

            // Calculate authorship statistics
            const authorshipStats = calculateAuthorship(revisions);
            
            // Redirect to results page with query parameter
            window.location.href = `results.html?title=${encodeURIComponent(pageTitle)}`;
        } catch (error) {
            console.error('Error fetching data:', error);
            alert(`An error occurred while fetching the authorship data: ${error.message}`);
        }
    });

    function calculateAuthorship(revisions) {
        const authorship = {};
        let totalCharacters = 0;

        revisions.forEach(revision => {
            const username = revision.user;
            const characters = revision.size;
            totalCharacters += characters;

            if (authorship[username]) {
                authorship[username] += characters;
            } else {
                authorship[username] = characters;
            }
        });

        const authorshipArray = Object.keys(authorship).map(username => {
            return {
                username: username,
                characters: authorship[username],
                percentage: ((authorship[username] / totalCharacters) * 100).toFixed(2)
            };
        });

        authorshipArray.sort((a, b) => b.characters - a.characters);

        return authorshipArray;
    }
</script>
